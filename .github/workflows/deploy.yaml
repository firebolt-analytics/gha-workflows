name: Deploy helm chart

on:
  workflow_call:
    inputs:
      image_tag:
        type: string
        required: true
        description: Image tag for values file. Expect image.tag parameter.
      k8s_environment:
        type: string
        required: true
        description: Kubernetes environment. One of supported in the organization.
      k8s_regions:
        type: string
        required: true
        description: List of Kubernetes regions. Supported for this particular environment
        default: |
          [
            'us-east-1'
          ]
      helm_release_name:
        type: string
        required: true
        description: Helm release name.
      helm_chart_path:
        type: string
        required: true
        description: Helm chart path. Supports links for published charts.
      k8s_namespace:
        type: string
        required: true
        description: Kubernetes namespace for helm chart installation.
      helm_timeout:
        type: string
        required: false
        description: Helm install timeout.
        default: "2m"
      runner_label:
        type: string
        required: false
        description: GHA Runner label. You may need one with custom tools on it for example.
        default: "kubernetes"

jobs:
  deploy:
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    strategy:
      matrix:
        region: ${{ fromJSON(github.event.inputs.k8s_regions) }}
    runs-on: 
      - self-hosted
      - ${{ inputs.runner_label }}
      - ${{ inputs.k8s_environment }}
    steps:
      - name: Checkout
        uses: "actions/checkout@v2"

      - name: Setup helm
        uses: "azure/setup-helm@v1"

      - name: Setup yq
        uses: "chrisdickinson/setup-yq@latest"

      - name: Deploy with helm
        run: |
          helm upgrade '${{ inputs.helm_release_name }}' '${{ inputs.helm_chart_path }}' \
          --atomic --install --wait --timeout='${{ inputs.helm_timeout }}' \
          --kubeconfig="${HOME}/.kube-${{ inputs.k8s_region }}/config" \
          --namespace='${{ inputs.k8s_namespace }}' \
          --values='${{ inputs.helm_chart_path }}/values.yaml' \
          --values='${{ inputs.helm_chart_path }}/values/${{ inputs.k8s_environment }}.yaml' \
          --values='${{ inputs.helm_chart_path }}/values/${{ inputs.k8s_environment }}/${{ matrix.region }}.yaml' \
          --set image.tag='${{ inputs.image_tag }}'
